"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const user_contoller_1 = require("../controllers/user.contoller");
const auth_middleware_1 = require("../middlewares/auth.middleware");
const multer_middleware_1 = require("../middlewares/multer.middleware");
const router = express_1.default.Router();
// router.post("/login", loginUser);>
router.post("/login", user_contoller_1.webLogin);
router.post("/app-login", user_contoller_1.appLogin);
router.post("/register", user_contoller_1.registerUser);
router.post("/addUser", auth_middleware_1.authorizeJwt, user_contoller_1.addUser);
router.patch("/updateUserById/:id", auth_middleware_1.authorizeJwt, user_contoller_1.updateUserById);
router.get("/searchVendor", user_contoller_1.searchVendor);
router.get("/getAllUsers", user_contoller_1.getAllUsers);
router.get("/getAllUsersForWebsite", user_contoller_1.getAllUsersForWebsite);
router.get("/getAllUsersWithAniversaryDate", user_contoller_1.getAllUsersWithAniversaryDate);
router.get("/getAllUsersWithSubsciption", auth_middleware_1.authorizeJwt, user_contoller_1.getAllUsersWithSubsciption);
router.get("/checkForValidSubscription/:id", user_contoller_1.checkForValidSubscription);
router.get("/checkForValidSubscriptionAndReturnBoolean/:id", user_contoller_1.checkForValidSubscriptionAndReturnBoolean);
router.get("/getUserById/:userId", user_contoller_1.getUserById);
router.delete("/deleteUserById/:userId", user_contoller_1.deleteUserById);
router.patch("/approveUserById/:userId", user_contoller_1.approveUserById);
router.patch("/verifyUserById/:userId", user_contoller_1.verifyUserById);
router.patch("/blockUserById/:userId", user_contoller_1.blockUserById);
router.post("/registerUserFcmToken", user_contoller_1.registerUserFcmToken);
router.post("/upload-documents/:userId", multer_middleware_1.upload.single("file"), user_contoller_1.uploadDocuments);
router.post("/sentOtp", user_contoller_1.sentOtp);
router.post("/refresh-token", user_contoller_1.refreshToken);
router.get("/getUserNotifications", user_contoller_1.getUserNotifications);
router.get("/markedAsRead", user_contoller_1.markedAsReadNotificatins);
router.get("/getSalesUsers", user_contoller_1.getSalesUsers);
router.get("/ChangeAllManufacturerRoles", user_contoller_1.ChangeAllManufacturerRoles);
router.get("/getAllSalesReport", user_contoller_1.getAllSalesReport);
exports.default = router;
